name: Continuous Integration
on: [push]

jobs:
  setup:
    name:  environment setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.1']
    env:
      extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql
      key: back-cache-1
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist

  quality:
    needs:
      - setup
    name:  code quality
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.1']
    env:
      extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql
      key: back-cache-1
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist

      - name: Check if composer is valid
        run: composer valid

      - name: Container linter
        run: bin/console lint:container

      - name: Check if doctrine schema is valid
        run: bin/console doctrine:schema:valid --skip-sync

      - name: Copy Paste detector
        run: vendor/bin/phpcpd src --exclude src/Admin/Controller

      - name: PHPStan
        run: vendor/bin/phpstan analyse --configuration=phpstan.neon --memory-limit=4G

  test:
    needs:
      - setup
    name: Backend code tests
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: symfony
          MYSQL_DATABASE: symfony
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=1s --health-timeout=5s --health-retries=30

    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.1']
    env:
      extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql
      key: back-cache-1
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist


      - name: Creating database
        run: |
          bin/console doctrine:database:drop --if-exists --force --env=test
          bin/console doctrine:database:create --env=test
          bin/console doctrine:schema:update --force --env=test
        env:
          DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony

      - name: Load fixtures
        run: |
          bin/console doctrine:fixtures:load -n --env=test
        env:
          DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony

      - name: Create key pair
        run: bin/console lexik:jwt:generate-keypair --overwrite -n --env=test

      - name: Run tests
        run: php bin/phpunit
        env:
          DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony

      - uses: codecov/codecov-action@v2
        with:
          files: ./var/coverage/clover.xml
          flags: tests
